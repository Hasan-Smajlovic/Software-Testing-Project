import { test, expect } from '@playwright/test';

test('Log in with invalid email address at Zara', async ({ browser }) => {
    const context = await browser.newContext();
    const page = await context.newPage();

    // Navigate to Zara's online page and wait for it to load
    await page.goto('https://www.zara.com/ba/', { waitUntil: 'domcontentloaded' });

    // Step 2: Click on "Log in" button
    await page.click('text=PRIJAVI SE');

    // Step 3: Enter invalid Email address
    await page.fill('input.zds-input-base__input[name="logonId"][type="text"]', 'g@m');

    // Step 4: Enter valid Password
    await page.fill('input.zds-input-base__input[name="password"][type="password"]', 'Faris123');

    // Step 5: Click on "Log in" button
    await page.click('text=PRIJAVI SE');

    // Check if the error message is available and capture it
    const errorMessageSelector = 'span:text("Unesite valjanu adresu e-pošte.")';
    if (await page.isVisible(errorMessageSelector)) {
        const errorMessage = await page.innerText(errorMessageSelector);
        console.log('Error Message: ', errorMessage);

        // Assertions
        expect(errorMessage).toContain('Unesite valjanu adresu e-pošte.');
    } else {
        console.log('Error message did not appear');
    }



    // Close context 
    await context.close();
});
